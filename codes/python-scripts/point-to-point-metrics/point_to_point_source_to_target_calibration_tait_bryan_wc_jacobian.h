inline void point_to_point_source_to_target_calibration_tait_bryan_wc(double &delta_x, double &delta_y, double &delta_z, double tx, double ty, double tz, double om, double fi, double ka, double ctx, double cty, double ctz, double com, double cfi, double cka, double x_s, double y_s, double z_s, double x_t, double y_t, double z_t)
{delta_x = -ctx*cos(fi)*cos(ka) + cty*sin(ka)*cos(fi) - ctz*sin(fi) - tx - x_s*(-(sin(cfi)*sin(com)*cos(cka) + sin(cka)*cos(com))*sin(ka)*cos(fi) + (-sin(cfi)*cos(cka)*cos(com) + sin(cka)*sin(com))*sin(fi) + cos(cfi)*cos(cka)*cos(fi)*cos(ka)) + x_t - y_s*(-(-sin(cfi)*sin(cka)*sin(com) + cos(cka)*cos(com))*sin(ka)*cos(fi) + (sin(cfi)*sin(cka)*cos(com) + sin(com)*cos(cka))*sin(fi) - sin(cka)*cos(cfi)*cos(fi)*cos(ka)) - z_s*(sin(cfi)*cos(fi)*cos(ka) + sin(com)*sin(ka)*cos(cfi)*cos(fi) + sin(fi)*cos(cfi)*cos(com));
delta_y = -ctx*(sin(fi)*sin(om)*cos(ka) + sin(ka)*cos(om)) - cty*(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om)) + ctz*sin(om)*cos(fi) - ty - x_s*((sin(cfi)*sin(com)*cos(cka) + sin(cka)*cos(com))*(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om)) - (-sin(cfi)*cos(cka)*cos(com) + sin(cka)*sin(com))*sin(om)*cos(fi) + (sin(fi)*sin(om)*cos(ka) + sin(ka)*cos(om))*cos(cfi)*cos(cka)) - y_s*((-sin(cfi)*sin(cka)*sin(com) + cos(cka)*cos(com))*(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om)) - (sin(cfi)*sin(cka)*cos(com) + sin(com)*cos(cka))*sin(om)*cos(fi) - (sin(fi)*sin(om)*cos(ka) + sin(ka)*cos(om))*sin(cka)*cos(cfi)) + y_t - z_s*(-(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om))*sin(com)*cos(cfi) + (sin(fi)*sin(om)*cos(ka) + sin(ka)*cos(om))*sin(cfi) - sin(om)*cos(cfi)*cos(com)*cos(fi));
delta_z = -ctx*(-sin(fi)*cos(ka)*cos(om) + sin(ka)*sin(om)) - cty*(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka)) - ctz*cos(fi)*cos(om) - tz - x_s*((sin(cfi)*sin(com)*cos(cka) + sin(cka)*cos(com))*(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka)) + (-sin(cfi)*cos(cka)*cos(com) + sin(cka)*sin(com))*cos(fi)*cos(om) + (-sin(fi)*cos(ka)*cos(om) + sin(ka)*sin(om))*cos(cfi)*cos(cka)) - y_s*((-sin(cfi)*sin(cka)*sin(com) + cos(cka)*cos(com))*(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka)) + (sin(cfi)*sin(cka)*cos(com) + sin(com)*cos(cka))*cos(fi)*cos(om) - (-sin(fi)*cos(ka)*cos(om) + sin(ka)*sin(om))*sin(cka)*cos(cfi)) - z_s*(-(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka))*sin(com)*cos(cfi) + (-sin(fi)*cos(ka)*cos(om) + sin(ka)*sin(om))*sin(cfi) + cos(cfi)*cos(com)*cos(fi)*cos(om)) + z_t;
}
inline void point_to_point_source_to_target_calibration_tait_bryan_wc_jacobian(Eigen::Matrix<double, 3, 6, Eigen::RowMajor> &j, double tx, double ty, double tz, double om, double fi, double ka, double ctx, double cty, double ctz, double com, double cfi, double cka, double x_s, double y_s, double z_s)
{j.coeffRef(0,0) = -cos(fi)*cos(ka);
j.coeffRef(0,1) = sin(ka)*cos(fi);
j.coeffRef(0,2) = -sin(fi);
j.coeffRef(0,3) = -x_s*((sin(cfi)*sin(com)*cos(cka) + sin(cka)*cos(com))*sin(fi) + (-sin(cfi)*cos(cka)*cos(com) + sin(cka)*sin(com))*sin(ka)*cos(fi)) - y_s*((-sin(cfi)*sin(cka)*sin(com) + cos(cka)*cos(com))*sin(fi) + (sin(cfi)*sin(cka)*cos(com) + sin(com)*cos(cka))*sin(ka)*cos(fi)) - z_s*(-sin(com)*sin(fi)*cos(cfi) + sin(ka)*cos(cfi)*cos(com)*cos(fi));
j.coeffRef(0,4) = -x_s*(-sin(cfi)*cos(cka)*cos(fi)*cos(ka) - sin(com)*sin(ka)*cos(cfi)*cos(cka)*cos(fi) - sin(fi)*cos(cfi)*cos(cka)*cos(com)) - y_s*(sin(cfi)*sin(cka)*cos(fi)*cos(ka) + sin(cka)*sin(com)*sin(ka)*cos(cfi)*cos(fi) + sin(cka)*sin(fi)*cos(cfi)*cos(com)) - z_s*(-sin(cfi)*sin(com)*sin(ka)*cos(fi) - sin(cfi)*sin(fi)*cos(com) + cos(cfi)*cos(fi)*cos(ka));
j.coeffRef(0,5) = -x_s*((sin(cfi)*sin(cka)*sin(com) - cos(cka)*cos(com))*sin(ka)*cos(fi) + (sin(cfi)*sin(cka)*cos(com) + sin(com)*cos(cka))*sin(fi) - sin(cka)*cos(cfi)*cos(fi)*cos(ka)) - y_s*((sin(cfi)*sin(com)*cos(cka) + sin(cka)*cos(com))*sin(ka)*cos(fi) + (sin(cfi)*cos(cka)*cos(com) - sin(cka)*sin(com))*sin(fi) - cos(cfi)*cos(cka)*cos(fi)*cos(ka));
j.coeffRef(1,0) = -sin(fi)*sin(om)*cos(ka) - sin(ka)*cos(om);
j.coeffRef(1,1) = sin(fi)*sin(ka)*sin(om) - cos(ka)*cos(om);
j.coeffRef(1,2) = sin(om)*cos(fi);
j.coeffRef(1,3) = -x_s*((-sin(cfi)*sin(com)*cos(cka) - sin(cka)*cos(com))*sin(om)*cos(fi) + (sin(cfi)*cos(cka)*cos(com) - sin(cka)*sin(com))*(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om))) - y_s*((sin(cfi)*sin(cka)*sin(com) - cos(cka)*cos(com))*sin(om)*cos(fi) + (-sin(cfi)*sin(cka)*cos(com) - sin(com)*cos(cka))*(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om))) - z_s*((sin(fi)*sin(ka)*sin(om) - cos(ka)*cos(om))*cos(cfi)*cos(com) + sin(com)*sin(om)*cos(cfi)*cos(fi));
j.coeffRef(1,4) = -x_s*((-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om))*sin(com)*cos(cfi)*cos(cka) - (sin(fi)*sin(om)*cos(ka) + sin(ka)*cos(om))*sin(cfi)*cos(cka) + sin(om)*cos(cfi)*cos(cka)*cos(com)*cos(fi)) - y_s*(-(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om))*sin(cka)*sin(com)*cos(cfi) - (-sin(fi)*sin(om)*cos(ka) - sin(ka)*cos(om))*sin(cfi)*sin(cka) - sin(cka)*sin(om)*cos(cfi)*cos(com)*cos(fi)) - z_s*(-(sin(fi)*sin(ka)*sin(om) - cos(ka)*cos(om))*sin(cfi)*sin(com) + (sin(fi)*sin(om)*cos(ka) + sin(ka)*cos(om))*cos(cfi) + sin(cfi)*sin(om)*cos(com)*cos(fi));
j.coeffRef(1,5) = -x_s*((-sin(cfi)*sin(cka)*sin(com) + cos(cka)*cos(com))*(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om)) + (-sin(cfi)*sin(cka)*cos(com) - sin(com)*cos(cka))*sin(om)*cos(fi) - (sin(fi)*sin(om)*cos(ka) + sin(ka)*cos(om))*sin(cka)*cos(cfi)) - y_s*((-sin(cfi)*sin(com)*cos(cka) - sin(cka)*cos(com))*(-sin(fi)*sin(ka)*sin(om) + cos(ka)*cos(om)) + (-sin(cfi)*cos(cka)*cos(com) + sin(cka)*sin(com))*sin(om)*cos(fi) + (-sin(fi)*sin(om)*cos(ka) - sin(ka)*cos(om))*cos(cfi)*cos(cka));
j.coeffRef(2,0) = sin(fi)*cos(ka)*cos(om) - sin(ka)*sin(om);
j.coeffRef(2,1) = -sin(fi)*sin(ka)*cos(om) - sin(om)*cos(ka);
j.coeffRef(2,2) = -cos(fi)*cos(om);
j.coeffRef(2,3) = -x_s*((sin(cfi)*sin(com)*cos(cka) + sin(cka)*cos(com))*cos(fi)*cos(om) + (sin(cfi)*cos(cka)*cos(com) - sin(cka)*sin(com))*(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka))) - y_s*((-sin(cfi)*sin(cka)*sin(com) + cos(cka)*cos(com))*cos(fi)*cos(om) + (-sin(cfi)*sin(cka)*cos(com) - sin(com)*cos(cka))*(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka))) - z_s*((-sin(fi)*sin(ka)*cos(om) - sin(om)*cos(ka))*cos(cfi)*cos(com) - sin(com)*cos(cfi)*cos(fi)*cos(om));
j.coeffRef(2,4) = -x_s*((sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka))*sin(com)*cos(cfi)*cos(cka) - (-sin(fi)*cos(ka)*cos(om) + sin(ka)*sin(om))*sin(cfi)*cos(cka) - cos(cfi)*cos(cka)*cos(com)*cos(fi)*cos(om)) - y_s*(-(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka))*sin(cka)*sin(com)*cos(cfi) - (sin(fi)*cos(ka)*cos(om) - sin(ka)*sin(om))*sin(cfi)*sin(cka) + sin(cka)*cos(cfi)*cos(com)*cos(fi)*cos(om)) - z_s*(-(-sin(fi)*sin(ka)*cos(om) - sin(om)*cos(ka))*sin(cfi)*sin(com) + (-sin(fi)*cos(ka)*cos(om) + sin(ka)*sin(om))*cos(cfi) - sin(cfi)*cos(com)*cos(fi)*cos(om));
j.coeffRef(2,5) = -x_s*((-sin(cfi)*sin(cka)*sin(com) + cos(cka)*cos(com))*(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka)) + (sin(cfi)*sin(cka)*cos(com) + sin(com)*cos(cka))*cos(fi)*cos(om) - (-sin(fi)*cos(ka)*cos(om) + sin(ka)*sin(om))*sin(cka)*cos(cfi)) - y_s*((-sin(cfi)*sin(com)*cos(cka) - sin(cka)*cos(com))*(sin(fi)*sin(ka)*cos(om) + sin(om)*cos(ka)) + (sin(cfi)*cos(cka)*cos(com) - sin(cka)*sin(com))*cos(fi)*cos(om) + (sin(fi)*cos(ka)*cos(om) - sin(ka)*sin(om))*cos(cfi)*cos(cka));
}